name: Deploy to Docker Hub and Server

on:
  push:
    branches: [deploy]

jobs:
  build-and-deploy-to-hub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create .env file with secrets
        run: |
          # Loop over the secrets object and generate a .env file with each key-value pair
          for key in "${!secrets[@]}"; do
            echo "$key=${{ secrets[$key] }}" >> .env
          done

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
        env:
          DOCKER_BUILDKIT: 1

  deploy-to-server:
    needs: build-and-deploy-to-hub
    runs-on: ubuntu-latest

    steps:
      - name: Check server connection
        id: ssh_check
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          timeout: '60s'
        continue-on-error: true

      - name: Skip if server not connectable
        if: ${{ steps.ssh_check.outcome == 'failure' }}
        run: echo "Skipping SSH and Docker container steps since server is not connectable."

      - name: Copy private key
        if: ${{ steps.ssh_check.outcome == 'success' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: SSH into Server and run Docker container
        id: ssh_deploy
        if: ${{ steps.ssh_check.outcome == 'success' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            if docker ps -a | grep -q ${{ secrets.DOCKER_REPOSITORY }}; then docker stop ${{ secrets.DOCKER_REPOSITORY }} || true; fi
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
            docker run --rm --name ${{ secrets.DOCKER_REPOSITORY }} -d -p 80:8000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}

  send-telegram-message:
    needs: deploy-to-server
    if: ${{ needs.deploy-to-server.outputs.ssh_deploy.outcome == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Deployment successful! ðŸš€ Build and deploy to Docker Hub and Server is complete."

  send-telegram-message-failure:
    needs: deploy-to-server
    if: ${{ needs.deploy-to-server.outputs.ssh_deploy.outcome == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Deployment successful! ðŸš€ Build and deploy to Docker Hub and Server is complete."

