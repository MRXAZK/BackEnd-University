name: Deploy to Docker Hub and Server

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create .env file with secrets
        run: |
          envs=(
            "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}"
            "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}"
            "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"
            "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
            "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"
            "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}"
            "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}"
            "PORT=${{ secrets.PORT }}"
            "CLIENT_ORIGIN=${{ secrets.CLIENT_ORIGIN }}"
            "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}"
            "REDIS_HOST=${{ secrets.REDIS_HOST }}"
            "REDIS_PORT=${{ secrets.REDIS_PORT }}"
            "JWT_PRIVATE_KEY=${{ secrets.JWT_PRIVATE_KEY }}"
            "JWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}"
            "ACCESS_TOKEN_EXPIRED_IN=${{ secrets.ACCESS_TOKEN_EXPIRED_IN }}"
            "ACCESS_TOKEN_MAXAGE=${{ secrets.ACCESS_TOKEN_MAXAGE }}"
            "REFRESH_TOKEN_EXPIRED_IN=${{ secrets.REFRESH_TOKEN_EXPIRED_IN }}"
            "REFRESH_TOKEN_MAXAGE=${{ secrets.REFRESH_TOKEN_MAXAGE }}"
          )
          printf "%s\n" "${envs[@]}" > .env

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
        env:
          DOCKER_BUILDKIT: 1

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        if: success()
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker stop ${{ secrets.DOCKER_REPOSITORY }} || true
            docker rm ${{ secrets.DOCKER_REPOSITORY }} || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
            docker run --name ${{ secrets.DOCKER_REPOSITORY }} -d -p 80:8000 --restart always ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}

  notify-success:
    needs: build-and-deploy
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send success notification
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Deployment successful! ðŸš€"

  notify-failure:
    needs: build-and-deploy
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send failure notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
